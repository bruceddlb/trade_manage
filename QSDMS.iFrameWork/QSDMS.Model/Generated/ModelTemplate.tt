<#@ template language="C#" debug="True" hostspecific="True" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Data.dll" #>
<#@ assembly name="System.Data.DataSetExtensions.dll" #>
<#@ assembly name="System.Xml.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ include file="ModelAuto.ttinclude"#>
<#@ include file="DBHelper.ttinclude"#>
<# var manager = new Manager(Host, GenerationEnvironment, true) { OutputPath = Path.GetDirectoryName(Host.TemplateFile)}; #>
<# 
	//-------------------------------------数据库连接地址字符串此处需要自己修改-begin
	//-------------------------------------
	 string ConnectionString = "Data Source=.;Initial Catalog=EMS_DMS;User ID=sa;Password=123;"; 	
	 string DbDatabase="EMS_DMS";	
	//---------------------------------------
	//---------------------------------------
    //-------------------------------------数据库连接地址字符串此处需要自己修改-end
 #>
 <# 
    foreach(DbTable table in DBHelper.GetDbTables(ConnectionString, DbDatabase)) 
    {  #>   

     <# 
		manager.StartBlock(table.TableName+"Entity.cs");
	 #>
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由T4模板自动生成
//	   生成时间 <#=DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")#> by 群升科技
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
    
using System;
namespace QSDMS.Model 
{
    /// <summary>
    /// 数据表实体类：<#= table.TableName.ToString()+"Entity" #> 
    /// </summary>
    [Serializable()]
    public class <#= table.TableName.ToString()+"Entity" #>
    {    
		<#            
        foreach (DbColumn column in DBHelper.GetDbColumns(ConnectionString, DbDatabase, table.TableName))
        { 
        #>            
		/// <summary>
		/// <#= column.ColumnType #>:<#=column.Remark#>
		/// </summary>	
                 
		public <#= column.CSharpType#><# if(column.CommonType.IsValueType && column.IsNullable){#>?<#}#> <#=column.ColumnName#> { get; set; }

        <# }  #>   
    }    
}
	<# manager.EndBlock(); #>
<#
  }
#>
<#
    manager.Process(true);
#>
