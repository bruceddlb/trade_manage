//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace QSDMS.API.AppSmsClient {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmsPropertyEnum", Namespace="http://schemas.datacontract.org/2004/07/Common.Enum")]
    public enum SmsPropertyEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SmsEvent = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SmsAD = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AppSmsClient.IAppSms")]
    public interface IAppSms {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppSms/SendSmsSame", ReplyAction="http://tempuri.org/IAppSms/SendSmsSameResponse")]
        QSDMS.API.AppSmsClient.SendSmsSameResponse SendSmsSame(QSDMS.API.AppSmsClient.SendSmsSameRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppSms/SendSmsSame", ReplyAction="http://tempuri.org/IAppSms/SendSmsSameResponse")]
        System.Threading.Tasks.Task<QSDMS.API.AppSmsClient.SendSmsSameResponse> SendSmsSameAsync(QSDMS.API.AppSmsClient.SendSmsSameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppSms/SendSms", ReplyAction="http://tempuri.org/IAppSms/SendSmsResponse")]
        QSDMS.API.AppSmsClient.SendSmsResponse SendSms(QSDMS.API.AppSmsClient.SendSmsRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppSms/SendSms", ReplyAction="http://tempuri.org/IAppSms/SendSmsResponse")]
        System.Threading.Tasks.Task<QSDMS.API.AppSmsClient.SendSmsResponse> SendSmsAsync(QSDMS.API.AppSmsClient.SendSmsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppSms/GetSmsInfo", ReplyAction="http://tempuri.org/IAppSms/GetSmsInfoResponse")]
        string GetSmsInfo(string serialNumber, string serialPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppSms/GetSmsInfo", ReplyAction="http://tempuri.org/IAppSms/GetSmsInfoResponse")]
        System.Threading.Tasks.Task<string> GetSmsInfoAsync(string serialNumber, string serialPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppSms/GetSmsInfoById", ReplyAction="http://tempuri.org/IAppSms/GetSmsInfoByIdResponse")]
        string GetSmsInfoById(int compid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppSms/GetSmsInfoById", ReplyAction="http://tempuri.org/IAppSms/GetSmsInfoByIdResponse")]
        System.Threading.Tasks.Task<string> GetSmsInfoByIdAsync(int compid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppSms/GetDjbSmsInfo", ReplyAction="http://tempuri.org/IAppSms/GetDjbSmsInfoResponse")]
        string GetDjbSmsInfo(int compid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAppSms/GetDjbSmsInfo", ReplyAction="http://tempuri.org/IAppSms/GetDjbSmsInfoResponse")]
        System.Threading.Tasks.Task<string> GetDjbSmsInfoAsync(int compid);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendSmsSame", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendSmsSameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public QSDMS.API.AppSmsClient.SmsPropertyEnum sendType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string serialNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string serialPwd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string[] mobile;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string content;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public long time;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public int compID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public int shopID;
        
        public SendSmsSameRequest() {
        }
        
        public SendSmsSameRequest(QSDMS.API.AppSmsClient.SmsPropertyEnum sendType, string serialNumber, string serialPwd, string[] mobile, string content, long time, int compID, int shopID) {
            this.sendType = sendType;
            this.serialNumber = serialNumber;
            this.serialPwd = serialPwd;
            this.mobile = mobile;
            this.content = content;
            this.time = time;
            this.compID = compID;
            this.shopID = shopID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendSmsSameResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendSmsSameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string SendSmsSameResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        public SendSmsSameResponse() {
        }
        
        public SendSmsSameResponse(string SendSmsSameResult, string error) {
            this.SendSmsSameResult = SendSmsSameResult;
            this.error = error;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendSms", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendSmsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public QSDMS.API.AppSmsClient.SmsPropertyEnum sendType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string serialNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string serialPwd;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public System.Collections.Generic.Dictionary<string, string> mc;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public long time;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public int compID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public int shopID;
        
        public SendSmsRequest() {
        }
        
        public SendSmsRequest(QSDMS.API.AppSmsClient.SmsPropertyEnum sendType, string serialNumber, string serialPwd, System.Collections.Generic.Dictionary<string, string> mc, long time, int compID, int shopID) {
            this.sendType = sendType;
            this.serialNumber = serialNumber;
            this.serialPwd = serialPwd;
            this.mc = mc;
            this.time = time;
            this.compID = compID;
            this.shopID = shopID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SendSmsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SendSmsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string SendSmsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string error;
        
        public SendSmsResponse() {
        }
        
        public SendSmsResponse(string SendSmsResult, string error) {
            this.SendSmsResult = SendSmsResult;
            this.error = error;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAppSmsChannel : QSDMS.API.AppSmsClient.IAppSms, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AppSmsClient : System.ServiceModel.ClientBase<QSDMS.API.AppSmsClient.IAppSms>, QSDMS.API.AppSmsClient.IAppSms {
        
        public AppSmsClient() {
        }
        
        public AppSmsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AppSmsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AppSmsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AppSmsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QSDMS.API.AppSmsClient.SendSmsSameResponse QSDMS.API.AppSmsClient.IAppSms.SendSmsSame(QSDMS.API.AppSmsClient.SendSmsSameRequest request) {
            return base.Channel.SendSmsSame(request);
        }
        
        public string SendSmsSame(QSDMS.API.AppSmsClient.SmsPropertyEnum sendType, string serialNumber, string serialPwd, string[] mobile, string content, long time, int compID, int shopID, out string error) {
            QSDMS.API.AppSmsClient.SendSmsSameRequest inValue = new QSDMS.API.AppSmsClient.SendSmsSameRequest();
            inValue.sendType = sendType;
            inValue.serialNumber = serialNumber;
            inValue.serialPwd = serialPwd;
            inValue.mobile = mobile;
            inValue.content = content;
            inValue.time = time;
            inValue.compID = compID;
            inValue.shopID = shopID;
            QSDMS.API.AppSmsClient.SendSmsSameResponse retVal = ((QSDMS.API.AppSmsClient.IAppSms)(this)).SendSmsSame(inValue);
            error = retVal.error;
            return retVal.SendSmsSameResult;
        }
        
        public System.Threading.Tasks.Task<QSDMS.API.AppSmsClient.SendSmsSameResponse> SendSmsSameAsync(QSDMS.API.AppSmsClient.SendSmsSameRequest request) {
            return base.Channel.SendSmsSameAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QSDMS.API.AppSmsClient.SendSmsResponse QSDMS.API.AppSmsClient.IAppSms.SendSms(QSDMS.API.AppSmsClient.SendSmsRequest request) {
            return base.Channel.SendSms(request);
        }
        
        public string SendSms(QSDMS.API.AppSmsClient.SmsPropertyEnum sendType, string serialNumber, string serialPwd, System.Collections.Generic.Dictionary<string, string> mc, long time, int compID, int shopID, out string error) {
            QSDMS.API.AppSmsClient.SendSmsRequest inValue = new QSDMS.API.AppSmsClient.SendSmsRequest();
            inValue.sendType = sendType;
            inValue.serialNumber = serialNumber;
            inValue.serialPwd = serialPwd;
            inValue.mc = mc;
            inValue.time = time;
            inValue.compID = compID;
            inValue.shopID = shopID;
            QSDMS.API.AppSmsClient.SendSmsResponse retVal = ((QSDMS.API.AppSmsClient.IAppSms)(this)).SendSms(inValue);
            error = retVal.error;
            return retVal.SendSmsResult;
        }
        
        public System.Threading.Tasks.Task<QSDMS.API.AppSmsClient.SendSmsResponse> SendSmsAsync(QSDMS.API.AppSmsClient.SendSmsRequest request) {
            return base.Channel.SendSmsAsync(request);
        }
        
        public string GetSmsInfo(string serialNumber, string serialPwd) {
            return base.Channel.GetSmsInfo(serialNumber, serialPwd);
        }
        
        public System.Threading.Tasks.Task<string> GetSmsInfoAsync(string serialNumber, string serialPwd) {
            return base.Channel.GetSmsInfoAsync(serialNumber, serialPwd);
        }
        
        public string GetSmsInfoById(int compid) {
            return base.Channel.GetSmsInfoById(compid);
        }
        
        public System.Threading.Tasks.Task<string> GetSmsInfoByIdAsync(int compid) {
            return base.Channel.GetSmsInfoByIdAsync(compid);
        }
        
        public string GetDjbSmsInfo(int compid) {
            return base.Channel.GetDjbSmsInfo(compid);
        }
        
        public System.Threading.Tasks.Task<string> GetDjbSmsInfoAsync(int compid) {
            return base.Channel.GetDjbSmsInfoAsync(compid);
        }
    }
}
